{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "dateTimeNow": {
          "type": "string",
          "defaultValue": "[utcNow('yyyy-MM-ddTHH:mm:ssZ')]"
      },
      "keyVaultName": {
        "type": "string",
        "defaultValue": "[concat('akv', uniqueString(parameters('dateTimeNow')))]",
        "minLength": 5,
        "maxLength": 50,
        "metadata": {
          "description": "Specifies the name of the key vault."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the Azure location where the key vault should be created."
        }
      },
      "enabledForTemplateDeployment": {
        "type": "bool",
        "defaultValue": true,
        "allowedValues": [
          true,
          false
        ],
        "metadata": {
          "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
        }
      },
      "tenantId": {
        "type": "string",
        "defaultValue": "[subscription().tenantId]"
      },
      "objectId": {
        "type": "string"
      },
      "keysPermissions": {
        "type": "array",
        "defaultValue": [
          "list"
        ],
        "metadata": {
          "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
        }
      },
      "secretsPermissions": {
        "type": "array",
        "defaultValue": [
          "list",
          "get",
          "set"
        ],
        "metadata": {
          "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
        }
      },
      "skuName": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Standard",
          "Premium"
        ],
        "metadata": {
          "description": "Specifies whether the key vault is a standard vault or a premium vault."
        }
      },
      "workspaceId": {
          "type": "string"
      }
    },
    "resources": [
      {
        "type": "Microsoft.KeyVault/vaults",
        "name": "[parameters('keyVaultName')]",
        "apiVersion": "2018-02-14",
        "location": "[parameters('location')]",
        "properties": {
          "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
          "tenantId": "[parameters('tenantId')]",
          "accessPolicies": [
            {
              "objectId": "[parameters('objectId')]",
              "tenantId": "[parameters('tenantId')]",
              "permissions": {
                "keys": "[parameters('keysPermissions')]",
                "secrets": "[parameters('secretsPermissions')]"      
              }
            }
          ],
          "sku": {
            "name": "[parameters('skuName')]",
            "family": "A"
          },
          "networkAcls": {
              "defaultAction": "Allow",
              "bypass": "AzureServices"
          }
        },
        "resources": [
          {
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(parameters('keyVaultName'), '/Microsoft.Insights/', parameters('keyVaultName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "logs": [
                    {
                        "category": "AuditEvent",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": 90
                        }
                    }
                ],
                "metrics": [
                    {
                        "timeGrain": "AllMetrics",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 90,
                            "enabled": "true"
                        }
                    }
                ]
            }
          }
        ]
      }
    ],
    "outputs": {
        "keyvaultId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/keyVaults/', parameters('keyVaultName'))]"
        },
        "keyvaultName": {
          "type": "string",
          "value": "[parameters('keyVaultName')]"
        }
    }
  }