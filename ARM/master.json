{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "rgName": {
        "type": "string"
      },
      "location": {
        "type": "string",
        "defaultValue": "[deployment().location]"
      },
      "spnObjectId": {
          "type": "string"
      },
      "secondaryLocation": {
          "type": "string"
      },
      "mySqlPass": {
          "type": "securestring",
          "metadata": {
              "description": "Password for MySQL sa user."
          }
      },
      "omsWorkspaceName": {
          "type": "string",
          "metadata": {
              "description": "Log Analytics Workspace name for diagnostic settings."
          }
      },
      "omsWorkspaceResourceGroup": {
          "type": "string",
          "metadata": {
              "description": "Log Analytics Workspace resource group."
          }
      },
      "aksObjectId": {
          "type": "string",
          "metadata": {
              "description": "SPN Object ID to be used by AKS"
          }
      },
      "aksClientId": {
          "type": "string",
          "metadata": {
              "description": "SPN Client ID to be used by AKS"
          }
      },
      "aksSPNSecret": {
          "type": "securestring",
          "metadata": {
              "description": "SPN secret to be used by AKS"
          }
      },
      "newZoneName": {
          "type": "string",
          "defaultValue": "sentiademo.com"
      }
    },
    "variables": {
        "templatesUri": "https://raw.githubusercontent.com/AresiusXP/sentia/master/ARM/"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-05-01",
            "location": "[parameters('location')]",
            "name": "[parameters('rgName')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-09-01",
            "name": "storageCDN",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesUri'), 'Storage/storage.json')]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-09-01",
            "name": "keyvault",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesUri'), 'KeyVault/keyvault.json')]"
                },
                "parameters": {
                    "objectId": {
                        "value": "[parameters('spnObjectId')]"
                    },
                    "omsWorkspaceName": {
                        "value": "[parameters('omsWorkspaceName')]"
                    },
                    "omsWorkspaceResourceGroup": {
                        "value": "[parameters('omsWorkspaceResourceGroup')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-09-01",
            "name": "containerRegistry",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesUri'), 'Registry/registry.json')]"
                },
                "parameters": {
                    "acrReplicaLocation": {
                        "value": "[parameters('secondaryLocation')]"
                    },
                    "omsWorkspaceName": {
                        "value": "[parameters('omsWorkspaceName')]"
                    },
                    "omsWorkspaceResourceGroup": {
                        "value": "[parameters('omsWorkspaceResourceGroup')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-09-01",
            "name": "redis",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesUri'), 'Redis/redis.json')]"
                },
                "parameters": {
                    "omsWorkspaceName": {
                        "value": "[parameters('omsWorkspaceName')]"
                    },
                    "omsWorkspaceResourceGroup": {
                        "value": "[parameters('omsWorkspaceResourceGroup')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-09-01",
            "name": "mySql",
            "resourceGroup": "[parameters('rgName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesUri'), 'DB/mysql.json')]"
                },
                "parameters": {
                    "administratorLoginPassword": {
                        "value": "[parameters('mySqlPass')]"
                    },
                    "keyvaultName": {
                        "value": "[reference('keyvault').outputs.keyvaultName.value]"
                    },
                    "secondaryLocation": {
                        "value": "[parameters('secondaryLocation')]"
                    },
                    "omsWorkspaceName": {
                        "value": "[parameters('omsWorkspaceName')]"
                    },
                    "omsWorkspaceResourceGroup": {
                        "value": "[parameters('omsWorkspaceResourceGroup')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-09-01",
            "name": "[concat('aks', copyIndex())]",
            "resourceGroup": "[parameters('rgName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesUri'), 'AKS/aks.json')]"
                },
                "parameters": {
                    "resourceName": {
                        "value": "[concat('aksCluster', copyIndex())]"
                    },
                    "location": {
                        "value": "[if(equals(copyIndex(),0),parameters('location'),parameters('secondaryLocation'))]"
                    },
                    "dnsPrefix": {
                        "value": "[concat('sentia',copyIndex())]"
                    },
                    "existingServicePrincipalObjectId": {
                        "value": "[parameters('aksObjectId')]"
                    },
                    "existingServicePrincipalClientId": {
                        "value": "[parameters('aksClientId')]"
                    },
                    "existingServicePrincipalClientSecret": {
                        "value": "[parameters('aksSPNSecret')]"
                    },
                    "omsWorkspaceName": {
                        "value": "[parameters('omsWorkspaceName')]"
                    },
                    "omsWorkspaceResourceGroup": {
                        "value": "[parameters('omsWorkspaceResourceGroup')]"
                    },
                    "secondaryNetwork": {
                        "value": "[if(equals(copyIndex(),0), bool('false'), bool('true'))]"
                    },
                    "kubernetesVersion": {
                        "value": "1.16.13"
                    }
                }
            },
            "copy": {
                "name": "aksClusters",
                "count": 2,
                "mode": "Parallel"
            }
        },
        {
            "type": "Microsoft.Network/dnsZones",
            "name": "[parameters('newZoneName')]",
            "apiVersion": "2019-05-01",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/dnsZones/A",
            "name": "[concat(parameters('newZoneName'), '/demo1')]",
            "apiVersion": "2019-05-01",
            "location": "global",
            "dependsOn": [
                "[parameters('newZoneName')]"
            ],
            "properties": {
                "TTL": 3600,
                "ARecords": [
                {
                    "ipv4Address": "1.2.3.4"
                }
                ]
            }
        },
        {
            "type": "Microsoft.Network/dnsZones/A",
            "name": "[concat(parameters('newZoneName'), '/demo2')]",
            "apiVersion": "2019-05-01",
            "location": "global",
            "dependsOn": [
                "[parameters('newZoneName')]"
            ],
            "properties": {
                "TTL": 3600,
                "ARecords": [
                {
                    "ipv4Address": "1.2.3.5"
                }
                ]
            }
        },
        {
            "type": "Microsoft.Network/dnsZones/CNAME",
            "name": "[concat(parameters('newZoneName'), '/www')]",
            "apiVersion": "2019-05-01",
            "location": "global",
            "dependsOn": [
                "[parameters('newZoneName')]"
            ],
            "properties": {
                "TTL": 3600,
                "CNAMERecord":{
                    "ipv4Address": "testsentia.trafficmanager.net"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-09-01",
            "name": "trafficManager",
            "resourceGroup": "[parameters('rgName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesUri'), 'TrafficManager/trafficManager.json')]"
                },
                "parameters": {
                    "primaryLocation": {
                        "value": "[parameters('location')]"
                    },
                    "secondaryLocation": {
                        "value": "[parameters('secondaryLocation')]"
                    }
                }
            }
        }
    ],
    "outputs": {}
  }